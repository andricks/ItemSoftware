name: Deploy Web App - Backend

on:
  push:
    branches:
      - main  # Usa la rama que utilizas para producción

jobs:
  deploy:
    runs-on: CRUD  # Ajusta el runner si es necesario
    strategy:
      matrix:
        host: [SSH_HOST1, SSH_HOST2]  # Configurar dos hosts para el despliegue
    steps:
      - uses: actions/checkout@v3

      # Setup Node.js con la versión 20
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20
      
      # Instalar dependencias y construir el proyecto
      - name: Instalar dependencias y construir proyecto
        run: | 
          npm install
          npm run build
          echo MONGO_URL="mongodb+srv://aestradaa10:8C1lW1hktkdWvCda@database.2bnxshh.mongodb.net/?retryWrites=true&w=majority&appName=database" > .env
        working-directory: ./api

      # Verificar la estructura del directorio
      - name: Listar archivos en el directorio de trabajo
        run: ls -la ./api

      # Configurar la clave SSH desde los secretos de GitHub
      - name: Configurar clave SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets[matrix.host] }}" >> ~/.ssh/known_hosts 2>> error.log || cat error.log
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      # Desplegar en el servidor remoto a través de SSH
      - name: Desplegar en el servidor remoto
        run: |
          echo "====== Desplegar en el servidor de producción ======"
          echo "====== Sincronizar directorio local y remoto ======"
          rsync -azPq -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" --delete ./api/build/ ${{ secrets.SSH_USER }}@${{ secrets[matrix.host] }}:/home/ubuntu/frontend/ --rsync-path="sudo rsync"
          rsync -azPq -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" --delete ./api/ ${{ secrets.SSH_USER }}@${{ secrets[matrix.host] }}:/home/ubuntu/backend/ --exclude 'build' --rsync-path="sudo rsync"
          ssh ${{ secrets.SSH_USER }}@${{ secrets[matrix.host] }} 'pm2 delete backend && pm2 start /home/ubuntu/backend/index.js --name backend'
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
